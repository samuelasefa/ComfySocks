@model ComfySocks.Models.SalesInfo.Sales
@{
    ViewBag.Title = "Sales Entry";
}

@{ ComfySocks.Models.ApplicationDbContext db = new ComfySocks.Models.ApplicationDbContext();}

<div class="box box-info box-body">
    @if (ViewBag.RequiredItems != null)
    {
        <div class="jumbotron">
            <h3 style="text-align:center;color:red">
                <strong>Before starting you have to set some information about?</strong>
            </h3>
            <ul class="list-style-none" style="text-align:center;list-style:none">
                <li style="color:orange">
                    @ViewBag.item
                </li>
                <li style="color:orange">
                    @ViewBag.store
                </li>
            </ul>
        </div>
    }

    else
    {
        <div class="row">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <table class="table table-striped table-hover" id="maintable">
                                <thead>
                                    <tr style="background-color:#00CCD2; color:white">

                                        <th>
                                            Code
                                        </th>
                                        <th>
                                            Description
                                        </th>
                                        <th>
                                            Unit
                                        </th>
                                        <th>
                                            Quantity
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (ComfySocks.Models.Items.Item T in ViewBag.ProductID)
                                    {
                                        <tr onclick="ItemSelected('@T.ID','@T.Code')">
                                            <td>@T.Code</td>
                                            <td>@T.Name</td>
                                            <td>@T.Unit.Name</td>
                                            <td>@{var available = db.ProductlogicalAvaliables.Find(T.ID);}
                                            @available.LogicalProductAvaliable
                                            </td>
                                        </tr>
                                      }
                                    
                                </tbody>
                                <tfoot>
                                    <tr style="background-color:#00CCD2; color:white">

                                        <th>
                                            Code
                                        </th>
                                        <th>
                                            Description
                                        </th>
                                        <th>
                                            Unit
                                        </th>
                                        <th>
                                            Quantity
                                        </th>
                                    </tr>
                                </tfoot>

                            </table>
                        </div>
                    </div>
                    <div class="col-md-12">
                        @using (Html.BeginForm("NewSalesEntry", "Sales", FormMethod.Post))
                        {
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.AntiForgeryToken()
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="row">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <p style="text-align:center">Product</p>
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.ItemID, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                                    @Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <p style="text-align:center">Quantity</p>
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <p style="text-align:center">Unit Price</p>
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                                    @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        &nbsp;
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <div class="col-md-offset-1 col-md-12">
                                                    <input type="submit" value="AddToList" class="btn btn-sm btn-info" style="margin-top:28px; float:right" />
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div style="background-color:#00CCD2; color:white; padding:10px">Sales Product Item</div>
                @********table here***********@
                <div id="" class="tablecontainer" style="height:260px; overflow-y:scroll; border:1px solid #BFAEAE">
                    @if (ViewBag.selectedSales != null)
                    {
                        float totalPrice = 0;
                        <table class="table table-border table-striped" id="dtaTable">
                            <thead>
                                <tr>
                                    <th>ItemCode</th>
                                    <th>Description</th>
                                    <th>Unit</th>
                                    <th>Quantity</th>
                                    <th>U.Price</th>
                                    <th>T.Price</th>
                                    <th>
                                        <i class="glyphicon glyphicon-trash"></i>
                                    </th>
                                </tr>
                            </thead>
                            @foreach (ComfySocks.Models.SalesInfo.SalesVM items in ViewBag.selectedSales)
                            {
                                <tr>
                                    <td>@items.Code</td>
                                    <td>@items.TypeOfProduct</td>
                                    <td>@items.Unit</td>
                                    <td>@items.Sales.Quantity</td>
                                    <td>@items.Sales.UnitPrice</td>
                                    <td>@(items.Sales.UnitPrice * items.Sales.Quantity)</td>
                                    <td hidden>@(totalPrice += (float)(items.Sales.UnitPrice * items.Sales.Quantity))</td>
                                    <td><a href="~/Sales/Remove?id=@items.Sales.ItemID"><span class="fa fa-remove"></span></a></td>
                                </tr>
                            }

                            <tr>
                                <td colspan="5"></td>
                                <td>Total:</td>
                                <td>@totalPrice</td>
                            </tr>

                        </table>
                    }
                </div>
                <br />

                <div>
                    @if (ViewBag.haveItem == true)
                    {

                        <a class="btn btn-primary pull-right" href="~/Sales/NewSalesInfo">
                            Next&nbsp;<span class="glyphicon glyphicon-triangle-right"></span>
                        </a>
                    }

                </div>
            </div>

        </div>

    }
    <hr />
    <div>
        @Html.ActionLink("Back to List", "SalesList")
    </div>

</div>

<script src="~/Scripts/sweetalert.js"></script>
<script src="~/Scripts/sweetalert.min.js"></script>
<link href="~/Scripts/sweetalert.css" rel="stylesheet" />

<script>
    function ItemSelected(id, Code) {
        document.getElementById("ItemID").value = id, Code;
    }

    //datatabale
    $("#maintable").DataTable({
        "info": false,
        "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
        "lengthChange": false,
    });
</script>

@if (ViewBag.errorMessage != null)
{
    <script>
                window.onload = function () {
                    sweetAlert("Opps...", "@ViewBag.errorMessage", "error");
                    return false;
                }
    </script>

}
@if (ViewBag.succsessMessage != null)
{
    <script>
                window.onload = function () {
                    sweetAlert("Congratulation", "@ViewBag.succsessMessage", "success");
                    return false;
                }
    </script>
}

@if (ViewBag.infoMessage != null)
{
    <script>
        window.onload = function () {
                sweetAlert("Success", "@ViewBag.infoMessage", "info");
                return false;
        }
    </script>
}
@if (ViewBag.RequiredItems != null)
{
    <script>
        window.onload = function () {
            sweetAlert("Shouldn't Be Empty!!", "Please Fill Supplier,Item and Store Information", "info");
            return false;
        }
    </script>
}

<style>
    .table-hover tbody tr:hover td, .table-hover tbody tr:hover th {
        background-color: #ECFEFE;
        color: #000000;
        cursor: pointer;
    }
</style>


