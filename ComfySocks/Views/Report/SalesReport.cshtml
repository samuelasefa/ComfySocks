@model IEnumerable<ComfySocks.Models.Items.Item>

@{

    ViewBag.Title = "Sales Report";
}

@{ ComfySocks.Models.ApplicationDbContext db = new ComfySocks.Models.ApplicationDbContext();}
@*<link href="~/Scripts/DataTables/Buttons-1.6.1/css/buttons.dataTables.min.css" rel="stylesheet" />*@

<div class="box box-info box-body">
    @*<div class="row">
        <form action="~/Report/SalseReport" method="post" class="col-sm-8 col-sm-offset-2 panel">
            <div class="col-md-4">
                <input type="date" placeholder="From Date" id="fromdate" name="fromdate" class="form-control" />
            </div>
            <div class="col-md-4">
                <input type="date" placeholder="To Date" id="to" name="to" class="form-control" />
            </div>
            <input type="submit" class="btn btn-info glyphicon glyphicon-search " value="Search" />
        </form>
    </div>*@
    <table class="table table-bordered table-striped" id="dtaTable">
        <thead>
            <tr>
                <th>
                    ID #
                </th>
                <th>
                    Description
                </th>
                <th>
                    Item Code
                </th>
                <th>
                    Unit
                </th>
                <th>
                    Quantity
                </th>
                <th>
                    UnitPrice
                </th>
                <th>
                    TotalPrice
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name) &nbsp; @Html.DisplayFor(modelItem => item.ItemType.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Unit.Name)
                    </td>
                    <td>
                        @{ var items = db.Sales.First();}
                        @items.Quantity
                    </td>
                    <td>
                        @items.UnitPrice
                    </td>
                    <td>
                        @(items.Quantity * items.UnitPrice)
                    </td>
                </tr>

            }
        </tbody>
        @*<tfoot>
                <tr>
                    <th colspan="6" class="text-right">Total:</th>
                    <th colspan="2"></th>
                </tr>
            </tfoot>*@
    </table>


</div>
@*<script src="~/Scripts/jquery-3.3.1.js"></script>*@
@*<script src="~/Scripts/DataTables/DataTables-1.10.9/js/jquery.dataTables.min.js"></script>*@
<script src="~/Scripts/DataTables/Buttons-1.6.1/js/dataTables.buttons.min.js"></script>
<script src="~/Scripts/DataTables/Buttons-1.6.1/js/buttons.flash.min.js"></script>
<script src="~/Scripts/DataTables/JSZip-2.5.0/jszip.min.js"></script>
<script src="~/Scripts/DataTables/pdfmake-0.1.36/pdfmake.min.js"></script>
<script src="~/Scripts/DataTables/pdfmake-0.1.36/vfs_fonts.js"></script>
<script src="~/Scripts/DataTables/Buttons-1.6.1/js/buttons.html5.js"></script>
<script src="~/Scripts/DataTables/Buttons-1.6.1/js/buttons.print.js"></script>

<script>
    $("#dtaTable").DataTable({
        "dom": 'Bfrtip',
        "buttons": [
            {
                extend: 'copy',
                footer: true,
                className: 'copyButton',
                text: '<i class="fa fa-clone"></i> Copy'
            },
            {
                extend: 'excel',
                text: '<i class="fa fa-file-excel-o"></i> Excel'
            },
            {
                extend: 'pdf',
                text: '<i class="fa fa-file-pdf-o"></i> Pdf'
            },
            {
                extend: 'print',
                text: '<i class="fa fa-print"></i> Print'
            }
        ],
        "footerCallback": function (row, data, start, end, display) {
            var api = this.api(), data;

            // Remove the formatting to get integer data for summation
            var intVal = function (i) {
                return typeof i === 'string' ?
                    i.replace(/[\$,]/g, '') * 1 :
                    typeof i === 'number' ?
                        i : 0;
            };

            // Total over all pages
            total = api
                .column(5)
                .data()
                .reduce(function (a, b) {
                    return intVal(a) + intVal(b);
                }, 0);

            // Total over this page
            pageTotal = api
                .column(5, { page: 'current' })
                .data()
                .reduce(function (a, b) {
                    return intVal(a) + intVal(b);
                }, 0);

            // Update footer
            $(api.column(5).footer()).html(
                '$' + pageTotal + ' ( $' + total + ' total)'
            );
        }
    });
</script>
