@model ComfySocks.Models.RowDeliveryInfo.RowDeliveryInformation

<div class="box box-body box-info" style="border-radius:10px">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 style="text-align:center;font-family:'Malgun Gothic'">RowMaterial Issue Information</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control datepicker", @placeholder = "Eg:10-08-2020", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Section, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Section, new { htmlAttributes = new { @class = "form-control", @placeholder = "Eg:Production" } })
                @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IssuedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IssuedBy, new { htmlAttributes = new { @class = "form-control", @placeholder = "Eg:Jhon" } })
                @Html.ValidationMessageFor(model => model.IssuedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApprovedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApprovedBy, new { htmlAttributes = new { @class = "form-control", @placeholder = "Eg:Jhon" } })
                @Html.ValidationMessageFor(model => model.ApprovedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecividBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecividBy, new { htmlAttributes = new { @class = "form-control", @placeholder = "Eg:Jhon" } })
                @Html.ValidationMessageFor(model => model.RecividBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create"  onclick="this.form.submit();  this.disabled = true; this.value = 'sending...'; return false" class="btn btn-info" />
            </div>
        </div>
    </div>
    }
</div>


<script>
    $(function () {
        $(".datepicker").datepicker({
            format: 'dd-mm-yyyy'
        });
    });
</script>